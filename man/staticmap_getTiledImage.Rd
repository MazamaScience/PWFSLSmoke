% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/staticmap_getTiledImage.R
\name{staticmap_getTiledImage}
\alias{staticmap_getTiledImage}
\title{Create a rasterBrick from a tiled image server}
\usage{
staticmap_getTiledImage(centerLon = NULL, centerLat = NULL,
  zoom = 12, bbox = NULL, tileServer = NULL, width = 640,
  height = 640, maxTiles = 20, crs = sp::CRS("+init=epsg:4326"))
}
\arguments{
\item{centerLon}{map center longitude}

\item{centerLat}{map center latitude}

\item{zoom}{map zoom level; corresponds to \code{ggmap::get_map()} zoom level}

\item{bbox}{must be an \code{st_bbox} object as specificed in the \code{sf} package documentation
\url{https://www.rdocumentation.org/packages/sf/versions/0.7-4/topics/st_bbox}. If not null,
\code{centerLon}, \code{centerLat}, and \code{zoom} are ignored.}

\item{tileServer}{tile server to use, if none defaults to Esri Topo}

\item{width}{width of image, in pixels}

\item{height}{height of image, in pixels}

\item{maxTiles}{maximum number of tiles to be returned. The greater the number, the slower the performance -- arbitrarily set to 20 by default.}

\item{crs}{object of class CRS. The Coordinate Reference System (CRS) for the
returned map. If the CRS of the downloaded map does not match, it will be
projected to the specified CRS using \code{raster::projectRaster}.}
}
\value{
A rasterBrick object which can be plotted with
\code{staticmap_plotRasterBrick()} or \code{raster::plotRGB()} and serve as a
base plot.
}
\description{
Uses the input coordinates to fetch and composite a raster from a tile server. Returns a
\code{raster::rasterBrick} object. This
can then passed as the \code{rasterBrick} object to the
\code{staticmap_plotRasterBrick()} function for plotting.

As of July 2019, this list is a handy reference to the freely available tile
servers which can be previewed at the following URL:

\url{https://leaflet-extras.github.io/leaflet-providers/preview/}
}
\note{
The spatial reference of the image when it is downloaded is 3857. If
the crs argument is different, projecting may cause the size and extent of
the image to differ very slightly from the input, on a scale of 1-2 pixels or
10^-3 degrees.

If bbox is specified and the bbox aspect ratio does not match the
width/height aspect ratio the extent is resized to prevent the map image from
appearing stretched, so the map extent may not match the bbox argument
exactly.
}
\examples{
\dontrun{
mapRaster <- staticmap_getTiledImagek(-122.3318, 47.668)
staticmap_plotRasterBrick(mapRaster)
}
}
\seealso{
\code{\link{staticmap_plotRasterBrick}}
}
\keyword{plotting}
